Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"de392b19-9021-405d-9230-3974b25e6aea\" name=\"Changes\" comment=\"CRUD app before setup DB\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/dbnavigator.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/project/dao/PersonDAO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/project/dao/PersonDAO.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"LogFilters\">\r\n    <option name=\"FILTER_ERRORS\" value=\"false\" />\r\n    <option name=\"FILTER_WARNINGS\" value=\"false\" />\r\n    <option name=\"FILTER_INFO\" value=\"true\" />\r\n    <option name=\"FILTER_DEBUG\" value=\"true\" />\r\n    <option name=\"CUSTOM_FILTER\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2VfeXQZNJAunEoCkr3Vwb5RR8qx\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"autoscrollFromSource\" value=\"true\" />\r\n    <option name=\"autoscrollToSource\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/JavaProjects/untitled1&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.38867438&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\JavaProjects\\SpringMVC\\src\\main\\webapp\\WEB-INF\\views\\first\" />\r\n      <recent name=\"D:\\JavaProjects\\SpringMVC\\src\\main\\webapp\\WEB-INF\\views\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\JavaProjects\\SpringMVC\\src\\main\\webapp\\WEB-INF\\views\\second\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"TomcatServer\" type=\"com.poratu.idea.plugins.tomcat\">\r\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Localhost Log\" />\r\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Access Log\" />\r\n      <predefined_log_file id=\"Tomcat Catalina Log\" />\r\n      <predefined_log_file id=\"Tomcat Manager Log\" />\r\n      <predefined_log_file id=\"Tomcat Host Manager Log\" />\r\n      <option name=\"catalinaBase\" value=\"C:\\Users\\BazhinovSY\\.SmartTomcat\\SpringMVC\\SpringMVC\" />\r\n      <option name=\"contextPath\" value=\"/\" />\r\n      <option name=\"docBase\" value=\"$PROJECT_DIR$/src/main/webapp\" />\r\n      <option name=\"extraClassPath\" value=\"\" />\r\n      <option name=\"tomcatInfo\">\r\n        <TomcatInfo>\r\n          <option name=\"name\" value=\"Apache Tomcat/10.1.13\" />\r\n          <option name=\"path\" value=\"$PROJECT_DIR$/../../apache-tomcat-10.1.13\" />\r\n          <option name=\"version\" value=\"10.1.13.0\" />\r\n        </TomcatInfo>\r\n      </option>\r\n      <option name=\"vmOptions\" value=\"\" />\r\n      <module name=\"SpringMVC\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"de392b19-9021-405d-9230-3974b25e6aea\" name=\"Changes\" comment=\"\" />\r\n      <created>1695231603351</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1695231603351</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Init commit\">\r\n      <created>1695323066910</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1695323066910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Replacement .xml files to Java code\">\r\n      <created>1695325624649</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1695325624649</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Lesson 17\">\r\n      <created>1695488415838</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1695488415838</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"First CRUD app\">\r\n      <created>1695575849319</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1695575849319</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"CRUD app before setup DB\">\r\n      <created>1695845242077</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1695845242077</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Init commit\" />\r\n    <MESSAGE value=\"Replacement .xml files to Java code\" />\r\n    <MESSAGE value=\"Lesson 17\" />\r\n    <MESSAGE value=\"First CRUD app\" />\r\n    <MESSAGE value=\"CRUD app before setup DB\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"CRUD app before setup DB\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,10 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="de392b19-9021-405d-9230-3974b25e6aea" name="Changes" comment="CRUD app before setup DB">
-      <change afterPath="$PROJECT_DIR$/.idea/dbnavigator.xml" afterDir="false" />
+    <list default="true" id="de392b19-9021-405d-9230-3974b25e6aea" name="Changes" comment="CRUD app before replacing JDBC API to JDBC template">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/project/config/SpringConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/project/config/SpringConfig.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/project/dao/PersonDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/project/dao/PersonDAO.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -18,15 +18,15 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Class" />
         <option value="HTML File" />
+        <option value="Class" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="498b5eccb6b1a09685ac0e94c1898a0222b31360" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -55,23 +55,25 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/JavaProjects/untitled1&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.38867438&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "DefaultHtmlFileTemplate": "HTML File",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "last_opened_file_path": "D:/JavaProjects/SpringMVC/src/main/webapp/WEB-INF/views/batch",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.38867438",
+    "settings.editor.selected.configurable": "preferences.pluginManager"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="D:\JavaProjects\SpringMVC\src\main\webapp\WEB-INF\views\batch" />
       <recent name="D:\JavaProjects\SpringMVC\src\main\webapp\WEB-INF\views\first" />
       <recent name="D:\JavaProjects\SpringMVC\src\main\webapp\WEB-INF\views" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\JavaProjects\SpringMVC\src" />
       <recent name="D:\JavaProjects\SpringMVC\src\main\webapp\WEB-INF\views\second" />
     </key>
   </component>
@@ -144,7 +146,14 @@
       <option name="project" value="LOCAL" />
       <updated>1695845242077</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary="CRUD app before replacing JDBC API to JDBC template">
+      <created>1695997502272</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1695997502272</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -164,7 +173,8 @@
     <MESSAGE value="Lesson 17" />
     <MESSAGE value="First CRUD app" />
     <MESSAGE value="CRUD app before setup DB" />
-    <option name="LAST_COMMIT_MESSAGE" value="CRUD app before setup DB" />
+    <MESSAGE value="CRUD app before replacing JDBC API to JDBC template" />
+    <option name="LAST_COMMIT_MESSAGE" value="CRUD app before replacing JDBC API to JDBC template" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: src/main/java/project/dao/PersonDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package project.dao;\r\n\r\nimport org.springframework.stereotype.Component;\r\nimport project.models.Person;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n@Component\r\npublic class PersonDAO {\r\n    private static final String URL=\"jdbc:postgresql://localhost:5432/first_db\";\r\n    private static final String USERNAME=\"postgres\";\r\n    private static final String PASSWORD=\"postgres\";\r\n    private static final Connection connection;\r\n    static {\r\n        try {\r\n            Class.forName(\"org.postgresql.Driver\");\r\n        } catch (ClassNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        try {\r\n            connection= DriverManager.getConnection(URL,USERNAME,PASSWORD);\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public List<Person> index(){\r\n        List<Person> people=new ArrayList<>();\r\n        try {\r\n            Statement statement = connection.createStatement();\r\n            String SQL =\"SELECT * FROM Person\";\r\n            ResultSet resultSet=statement.executeQuery(SQL);\r\n            while (resultSet.next()){\r\n                Person person = new Person();\r\n                person.setId(resultSet.getInt(\"id\"));\r\n                person.setAge(resultSet.getInt(\"age\"));\r\n                person.setName(resultSet.getString(\"name\"));\r\n                person.setEmail(resultSet.getString(\"email\"));\r\n                people.add(person);\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return people;\r\n    }\r\n\r\n    public Person show(int id){\r\n        Person person = null;\r\n        try {\r\n            PreparedStatement preparedStatement = connection.prepareStatement(\"SELECT * FROM Person WHERE id=?\");\r\n            preparedStatement.setInt(1,id);\r\n            ResultSet resultSet=preparedStatement.executeQuery();\r\n            resultSet.next();\r\n            person=new Person();\r\n            person.setId(resultSet.getInt(\"id\"));\r\n            person.setAge(resultSet.getInt(\"age\"));\r\n            person.setName(resultSet.getString(\"name\"));\r\n            person.setEmail(resultSet.getString(\"email\"));\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return person;\r\n    }\r\n\r\n    public void save(Person person){\r\n        try {\r\n            PreparedStatement preparedStatement = connection.prepareStatement(\"INSERT INTO Person VALUES(1,?,?,?)\");\r\n            preparedStatement.setString(1, person.getName());\r\n            preparedStatement.setInt(2, person.getAge());\r\n            preparedStatement.setString(3, person.getEmail());\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public void update(int id, Person updatedPerson ){\r\n        try {\r\n            PreparedStatement preparedStatement = connection.prepareStatement(\"UPDATE Person SET name=?, age=?, email=? WHERE id=?\");\r\n            preparedStatement.setString(1, updatedPerson.getName());\r\n            preparedStatement.setInt(2, updatedPerson.getAge());\r\n            preparedStatement.setString(3, updatedPerson.getEmail());\r\n            preparedStatement.setInt(4, id);\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public void delete(int id){\r\n        try {\r\n            PreparedStatement preparedStatement = connection.prepareStatement(\"DELETE FROM Person WHERE id=?\");\r\n            preparedStatement.setInt(1, id);\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/project/dao/PersonDAO.java b/src/main/java/project/dao/PersonDAO.java
--- a/src/main/java/project/dao/PersonDAO.java	
+++ b/src/main/java/project/dao/PersonDAO.java	
@@ -1,5 +1,9 @@
 package project.dao;
 
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.jdbc.core.BatchPreparedStatementSetter;
+import org.springframework.jdbc.core.BeanPropertyRowMapper;
+import org.springframework.jdbc.core.JdbcTemplate;
 import org.springframework.stereotype.Component;
 import project.models.Person;
 
@@ -9,93 +13,73 @@
 
 @Component
 public class PersonDAO {
-    private static final String URL="jdbc:postgresql://localhost:5432/first_db";
-    private static final String USERNAME="postgres";
-    private static final String PASSWORD="postgres";
-    private static final Connection connection;
-    static {
-        try {
-            Class.forName("org.postgresql.Driver");
-        } catch (ClassNotFoundException e) {
-            throw new RuntimeException(e);
-        }
-        try {
-            connection= DriverManager.getConnection(URL,USERNAME,PASSWORD);
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
+    public final JdbcTemplate jdbcTemplate;
+    @Autowired
+    public PersonDAO(JdbcTemplate jdbcTemplate){
+        this.jdbcTemplate=jdbcTemplate;
     }
 
     public List<Person> index(){
-        List<Person> people=new ArrayList<>();
-        try {
-            Statement statement = connection.createStatement();
-            String SQL ="SELECT * FROM Person";
-            ResultSet resultSet=statement.executeQuery(SQL);
-            while (resultSet.next()){
-                Person person = new Person();
-                person.setId(resultSet.getInt("id"));
-                person.setAge(resultSet.getInt("age"));
-                person.setName(resultSet.getString("name"));
-                person.setEmail(resultSet.getString("email"));
-                people.add(person);
-            }
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-        return people;
+        return jdbcTemplate.query("SELECT * FROM Person",new BeanPropertyRowMapper<>(Person.class));
     }
 
     public Person show(int id){
-        Person person = null;
-        try {
-            PreparedStatement preparedStatement = connection.prepareStatement("SELECT * FROM Person WHERE id=?");
-            preparedStatement.setInt(1,id);
-            ResultSet resultSet=preparedStatement.executeQuery();
-            resultSet.next();
-            person=new Person();
-            person.setId(resultSet.getInt("id"));
-            person.setAge(resultSet.getInt("age"));
-            person.setName(resultSet.getString("name"));
-            person.setEmail(resultSet.getString("email"));
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-        return person;
+        return jdbcTemplate.query("SELECT * FROM Person WHERE id=?",new Object[]{id},new BeanPropertyRowMapper<>(Person.class))
+                .stream().findAny().orElse(null);
     }
 
     public void save(Person person){
-        try {
-            PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO Person VALUES(1,?,?,?)");
-            preparedStatement.setString(1, person.getName());
-            preparedStatement.setInt(2, person.getAge());
-            preparedStatement.setString(3, person.getEmail());
-            preparedStatement.executeUpdate();
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
+        jdbcTemplate.update("INSERT INTO Person VALUES(1,?,?,?)",person.getName(),person.getAge(),person.getEmail());
     }
 
     public void update(int id, Person updatedPerson ){
-        try {
-            PreparedStatement preparedStatement = connection.prepareStatement("UPDATE Person SET name=?, age=?, email=? WHERE id=?");
-            preparedStatement.setString(1, updatedPerson.getName());
-            preparedStatement.setInt(2, updatedPerson.getAge());
-            preparedStatement.setString(3, updatedPerson.getEmail());
-            preparedStatement.setInt(4, id);
-            preparedStatement.executeUpdate();
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
+        jdbcTemplate.update("UPDATE Person SET name=?, age=?, email=? WHERE id=?",
+                updatedPerson.getName(),updatedPerson.getAge(),updatedPerson.getEmail(),id);
     }
 
     public void delete(int id){
-        try {
-            PreparedStatement preparedStatement = connection.prepareStatement("DELETE FROM Person WHERE id=?");
-            preparedStatement.setInt(1, id);
-            preparedStatement.executeUpdate();
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
+        jdbcTemplate.update("DELETE FROM Person WHERE id=?",id);
+    }
+
+
+    public void testMultipleUpdate(){
+        List<Person> people = create1000People();
+        long before = System.currentTimeMillis();
+        for (Person person:people){
+            jdbcTemplate.update("INSERT INTO Person VALUES(?,?,?,?)",person.getId(),person.getName(),person.getAge(),person.getEmail());
         }
+        long after = System.currentTimeMillis();
+        System.out.println("Time: " + (after-before));
     }
-}
+    public void  testBatchUpdate(){
+        List<Person> people = create1000People();
+        long before = System.currentTimeMillis();
+        jdbcTemplate.batchUpdate("INSERT INTO Person VALUES(?,?,?,?)", new BatchPreparedStatementSetter() {
+            @Override
+            public void setValues(PreparedStatement ps, int i) throws SQLException {
+                ps.setInt(1,people.get(i).getId());
+                ps.setString(2,people.get(i).getName());
+                ps.setInt(3,people.get(i).getAge());
+                ps.setString(4,people.get(i).getEmail());
+            }
+
+            @Override
+            public int getBatchSize() {
+                return people.size();
+            }
+        });
+        long after = System.currentTimeMillis();
+        System.out.println("Time: " + (after-before));
+    }
+
+    private List<Person> create1000People() {
+        List<Person> people= new ArrayList<>();
+
+        for (int i = 0; i < 1000; i++) {
+            people.add(new Person(i,"Name"+i,25,"test"+i+"@mail.ru"));
+        }
+        return people;
+    }
+
+
+}
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>org.example</groupId>\r\n  <artifactId>SpringMVC</artifactId>\r\n  <packaging>war</packaging>\r\n  <properties>\r\n    <maven.compiler.source>17</maven.compiler.source>\r\n    <maven.compiler.target>17</maven.compiler.target>\r\n  </properties>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <name>SpringMVC Maven Webapp</name>\r\n  <url>http://maven.apache.org</url>\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>junit</groupId>\r\n      <artifactId>junit</artifactId>\r\n      <version>3.8.1</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->\r\n    <dependency>\r\n      <groupId>org.springframework</groupId>\r\n      <artifactId>spring-core</artifactId>\r\n      <version>6.0.11</version>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->\r\n    <dependency>\r\n      <groupId>org.springframework</groupId>\r\n      <artifactId>spring-context</artifactId>\r\n      <version>6.0.11</version>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->\r\n    <dependency>\r\n      <groupId>org.springframework</groupId>\r\n      <artifactId>spring-web</artifactId>\r\n      <version>6.0.11</version>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->\r\n    <dependency>\r\n      <groupId>org.springframework</groupId>\r\n      <artifactId>spring-webmvc</artifactId>\r\n      <version>6.0.11</version>\r\n    </dependency>\r\n\r\n    <!-- https://mavenlibs.com/maven/dependency/org.thymeleaf/thymeleaf-spring6 -->\r\n    <dependency>\r\n      <groupId>org.thymeleaf</groupId>\r\n      <artifactId>thymeleaf-spring6</artifactId>\r\n      <version>3.1.2.RELEASE</version>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api -->\r\n    <dependency>\r\n      <groupId>jakarta.servlet</groupId>\r\n      <artifactId>jakarta.servlet-api</artifactId>\r\n      <version>6.0.0</version>\r\n      <scope>provided</scope>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->\r\n    <dependency>\r\n      <groupId>org.hibernate.validator</groupId>\r\n      <artifactId>hibernate-validator</artifactId>\r\n      <version>8.0.0.Final</version>\r\n    </dependency>\r\n\r\n    <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->\r\n    <dependency>\r\n      <groupId>org.postgresql</groupId>\r\n      <artifactId>postgresql</artifactId>\r\n      <version>42.6.0</version>\r\n    </dependency>\r\n\r\n  </dependencies>\r\n  <build>\r\n    <finalName>SpringMVC</finalName>\r\n  </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -47,6 +47,12 @@
       <version>6.0.11</version>
     </dependency>
 
+    <dependency>
+      <groupId>org.springframework</groupId>
+      <artifactId>spring-jdbc</artifactId>
+      <version>6.0.11</version>
+    </dependency>
+
     <!-- https://mavenlibs.com/maven/dependency/org.thymeleaf/thymeleaf-spring6 -->
     <dependency>
       <groupId>org.thymeleaf</groupId>
